Index: src/profile/migrations/0001_initial.py
===================================================================
diff --git a/src/profile/migrations/0001_initial.py b/src/profile/migrations/0001_initial.py
deleted file mode 100644
--- a/src/profile/migrations/0001_initial.py	
+++ /dev/null	
@@ -1,36 +0,0 @@
-# Generated by Django 3.2.9 on 2022-09-06 12:29
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-        ('cars', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Profile',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('password', models.CharField(max_length=128, verbose_name='password')),
-                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
-                ('created_at', models.DateTimeField(auto_now_add=True)),
-                ('updated_at', models.DateTimeField(auto_now=True)),
-                ('username', models.CharField(max_length=256, unique=True)),
-                ('email', models.EmailField(db_index=True, max_length=256, unique=True)),
-                ('description', models.TextField(verbose_name='Description')),
-                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
-                ('bio', models.TextField(blank=True, null=True)),
-                ('is_active', models.BooleanField(default=True)),
-                ('is_verified', models.BooleanField(default=False)),
-                ('cars', models.ManyToManyField(null=True, related_name='car_profile', to='cars.Cars')),
-            ],
-            options={
-                'abstract': False,
-            },
-        ),
-    ]
Index: src/profile/migrations/0004_alter_profile_username.py
===================================================================
diff --git a/src/profile/migrations/0004_alter_profile_username.py b/src/profile/migrations/0004_alter_profile_username.py
deleted file mode 100644
--- a/src/profile/migrations/0004_alter_profile_username.py	
+++ /dev/null	
@@ -1,18 +0,0 @@
-# Generated by Django 3.2.9 on 2022-09-06 13:09
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('profile', '0003_auto_20220906_1601'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='profile',
-            name='username',
-            field=models.CharField(max_length=256, unique=True),
-        ),
-    ]
Index: requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/requirements.txt b/requirements.txt
deleted file mode 100644
--- a/requirements.txt	
+++ /dev/null	
@@ -1,90 +0,0 @@
-altgraph==0.17.2
-APScheduler==3.6.3
-asgiref==3.5.0
-async-generator==1.10
-attrs==21.4.0
-beautifulsoup4==4.11.1
-cachetools==4.2.2
-certifi==2021.10.8
-cffi==1.15.0
-chardet==3.0.4
-charset-normalizer==2.0.12
-click==8.1.2
-colorama==0.4.4
-comtypes==1.1.11
-cryptography==37.0.2
-decorator==4.4.2
-deep-translator==1.8.3
-Django==3.2.9
-django-ckeditor==6.4.1
-django-js-asset==2.0.0
-django-telegrambot==1.0.1
-django-debug-toolbar==3.6.0
-djangorestframework==3.13.1
-drf-spectacular==0.21.0
-future==0.18.2
-googletrans==3.1.0a0
-gTTS==2.2.4
-h11==0.9.0
-h2==3.2.0
-hpack==3.0.0
-hstspreload==2021.12.1
-httpcore==0.9.1
-httpx==0.13.3
-hyperframe==5.2.0
-idna==2.10
-imageio==2.16.1
-imageio-ffmpeg==0.4.5
-inflection==0.5.1
-job-queue==0.1
-jsonschema==4.4.0
-moviepy==1.0.3
-numpy==1.22.3
-outcome==1.1.0
-pefile==2021.9.3
-Pillow==8.4.0
-proglog==0.1.9
-psycopg2==2.9.3
-pycparser==2.21
-pyinstaller==5.0.1
-pyinstaller-hooks-contrib==2022.4
-pyOpenSSL==22.0.0
-PyQt5==5.15.6
-PyQt5-Qt5==5.15.2
-PyQt5-sip==12.10.1
-pyrsistent==0.18.1
-pyshorteners==1.0.1
-PySocks==1.7.1
-pyTelegramBotAPI==4.5.0
-python-dotenv==0.20.0
-python-decouple==3.6
-python-telegram-bot==13.11
-pyttsx3==2.90
-pytz==2022.1
-pytz-deprecation-shim==0.1.0.post0
-PyYAML==6.0
-requests==2.27.1
-rfc3986==1.5.0
-schedule==1.1.0
-selenium==4.2.0
-shortcuts==0.11.0
-six==1.16.0
-sniffio==1.2.0
-sortedcontainers==2.4.0
-soupsieve==2.3.2.post1
-SpeechRecognition==3.8.1
-sqlparse==0.4.2
-toml==0.10.2
-tornado==6.1
-tqdm==4.63.1
-translator==0.0.9
-trio==0.21.0
-trio-websocket==0.9.2
-tzdata==2021.5
-tzlocal==4.2
-Unidecode==1.3.4
-uritemplate==4.1.1
-urllib3==1.26.9
-webdriver-manager==3.7.0
-whois==0.9.13
-wsproto==1.1.0
Index: src/profile/migrations/0002_auto_20220906_1532.py
===================================================================
diff --git a/src/profile/migrations/0002_auto_20220906_1532.py b/src/profile/migrations/0002_auto_20220906_1532.py
deleted file mode 100644
--- a/src/profile/migrations/0002_auto_20220906_1532.py	
+++ /dev/null	
@@ -1,21 +0,0 @@
-# Generated by Django 3.2.9 on 2022-09-06 12:32
-
-from django.db import migrations
-from django.db import models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('profile', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name="profile",
-            name="email",
-            field=models.EmailField(
-                db_index=True, max_length=256, unique=True
-            ),
-        ),
-    ]
Index: src/profile/migrations/0003_auto_20220906_1601.py
===================================================================
diff --git a/src/profile/migrations/0003_auto_20220906_1601.py b/src/profile/migrations/0003_auto_20220906_1601.py
deleted file mode 100644
--- a/src/profile/migrations/0003_auto_20220906_1601.py	
+++ /dev/null	
@@ -1,19 +0,0 @@
-# Generated by Django 3.2.9 on 2022-09-06 13:01
-from django.db import models
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-    dependencies = [
-        ('profile', '0002_auto_20220906_1532'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name="profile",
-            name="username",
-            field=models.CharField(
-                db_index=True, max_length=256, unique=True
-            ),
-        )
-    ]
Index: src/cars_details/api/views/cars_details.py
===================================================================
diff --git a/src/cars_details/api/views/cars_details.py b/src/cars_details/api/views/cars_details.py
new file mode 100644
--- /dev/null	
+++ b/src/cars_details/api/views/cars_details.py	
@@ -0,0 +1,29 @@
+from django.shortcuts import render
+from rest_framework.mixins import (
+    CreateModelMixin,
+    RetrieveModelMixin,
+    DestroyModelMixin,
+)
+from rest_framework import generics, status, viewsets
+from src.cars_details.api.serializers.cars_details import CarsDetailsSerializer
+from rest_framework.response import Response
+from src.cars_details.models import CarsDetails
+from rest_framework.parsers import MultiPartParser, JSONParser, FormParser
+
+
+class CarsDetailsView(viewsets.ModelViewSet):
+
+    serializer_class = CarsDetailsSerializer
+    queryset = CarsDetails.objects.all()
+
+    def post(self, request, *args, **kwargs):
+        user = request.data
+        serializer = self.serializer_class(data=user)
+        serializer.is_valid(raise_exception=True)
+        serializer.save()
+
+        user_data = serializer.data
+
+        return Response(user_data, status=status.HTTP_201_CREATED)
+
+    parser_classes = [FormParser, MultiPartParser, JSONParser]
Index: src/salon/api/router.py
===================================================================
diff --git a/src/salon/api/router.py b/src/salon/api/router.py
new file mode 100644
--- /dev/null	
+++ b/src/salon/api/router.py	
@@ -0,0 +1,7 @@
+from rest_framework import routers
+
+from src.salon.api.views.salon import SalonView
+
+salon_api_router = routers.DefaultRouter()
+
+salon_api_router.register("salon", SalonView)
Index: src/cars_details/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom src.carshop.config.date_model_mixin import TimeStampMixin\r\n\r\n\r\nclass CarsDetails(TimeStampMixin):\r\n    name = models.CharField(max_length=256, null=False, blank=False)\r\n    description = models.TextField(\"Description\", blank=True, null=True)\r\n    color = image = models.ImageField(null=True, blank=True, upload_to=\"images/\")\r\n    image = models.ImageField(null=True, blank=True, upload_to=\"images/\")\r\n    cars = models.ManyToManyField(\r\n        \"cars.Cars\", related_name=\"car_for_details\", null=True, blank=True\r\n    )\r\n    car_brand = models.CharField(\r\n        max_length=200,\r\n        blank=False,\r\n        null=False,\r\n    )\r\n    is_active = models.BooleanField(default=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cars_details/models.py b/src/cars_details/models.py
--- a/src/cars_details/models.py	
+++ b/src/cars_details/models.py	
@@ -1,5 +1,25 @@
 from django.db import models
 from src.carshop.config.date_model_mixin import TimeStampMixin
+from django.contrib.auth.models import (
+    AbstractBaseUser,
+    BaseUserManager,
+    PermissionsMixin,
+)
+
+
+class CarsDetailsManager(BaseUserManager):
+    def create_car_detail(self, name, description):
+        if name is None:
+            raise TypeError("User without username - not user!!!!")
+        if description is None:
+            raise TypeError("Car without description - Dangemaster!")
+
+        user = self.model(
+            name=name,
+            description=description,
+        )
+        user.save()
+        return user
 
 
 class CarsDetails(TimeStampMixin):
@@ -16,3 +36,5 @@
         null=False,
     )
     is_active = models.BooleanField(default=True)
+
+    objects = CarsDetailsManager()
Index: src/cars_details/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cars_details/urls.py b/src/cars_details/urls.py
--- a/src/cars_details/urls.py	
+++ b/src/cars_details/urls.py	
@@ -1,0 +1,7 @@
+from django.urls import path, include
+from src.cars_details.api.router import cars_details_api_router
+from . import views
+
+urlpatterns = [
+    path("/", include(cars_details_api_router.urls)),
+]
Index: src/cars/api/serializers/cars.py
===================================================================
diff --git a/src/cars/api/serializers/cars.py b/src/cars/api/serializers/cars.py
new file mode 100644
--- /dev/null	
+++ b/src/cars/api/serializers/cars.py	
@@ -0,0 +1,20 @@
+from rest_framework import serializers
+from src.cars.models import Cars
+
+
+class CarSerializer(serializers.ModelSerializer):
+    # image = serializers.ImageField(required=True, allow_null=False)
+
+    class Meta:
+        model = Cars
+        fields = ["name", "description"]
+
+    def validate(self, attrs):
+        name = attrs.get("name", "")
+
+        if not name.isalnum():
+            raise serializers.ValidationError("Error")
+        return attrs
+
+    def create(self, validated_data):
+        return Cars.objects.create_car(**validated_data)
Index: src/cars_details/api/router.py
===================================================================
diff --git a/src/cars_details/api/router.py b/src/cars_details/api/router.py
new file mode 100644
--- /dev/null	
+++ b/src/cars_details/api/router.py	
@@ -0,0 +1,7 @@
+from rest_framework import routers
+
+from src.cars_details.api.views.cars_details import CarsDetailsView
+
+cars_details_api_router = routers.DefaultRouter()
+
+cars_details_api_router.register("cars_details", CarsDetailsView)
Index: src/cars/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cars/urls.py b/src/cars/urls.py
--- a/src/cars/urls.py	
+++ b/src/cars/urls.py	
@@ -1,0 +1,7 @@
+from django.urls import path, include
+from src.cars.api.router import cars_api_router
+from . import views
+
+urlpatterns = [
+    path("/", include(cars_api_router.urls)),
+]
Index: src/cars/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom src.carshop.config.date_model_mixin import TimeStampMixin\r\n\r\n\r\nclass Cars(TimeStampMixin):\r\n    name = models.CharField(max_length=256, null=False, blank=False)\r\n    description = models.TextField(\"Description\", blank=True, null=True)\r\n    date = models.DateTimeField(auto_now_add=True)\r\n    image = models.ImageField(null=True, blank=True, upload_to=\"images/\")\r\n    cars_details = models.ManyToManyField(\r\n        \"cars_details.CarsDetails\", related_name=\"cars_details\", null=True, blank=True\r\n    )\r\n    provider = models.ManyToManyField(\r\n        \"provider.Provider\", related_name=\"provider\", null=True, blank=True\r\n    )\r\n    is_active = models.BooleanField(default=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cars/models.py b/src/cars/models.py
--- a/src/cars/models.py	
+++ b/src/cars/models.py	
@@ -1,11 +1,30 @@
 from django.db import models
 from src.carshop.config.date_model_mixin import TimeStampMixin
+from django.contrib.auth.models import (
+    AbstractBaseUser,
+    BaseUserManager,
+    PermissionsMixin,
+)
+
+
+class CarsManager(BaseUserManager):
+    def create_car(self, name, description):
+        if name is None:
+            raise TypeError("User without username - not user!!!!")
+        if description is None:
+            raise TypeError("Car without description - Dangemaster!")
+
+        user = self.model(
+            name=name,
+            description=description,
+        )
+        user.save()
+        return user
 
 
 class Cars(TimeStampMixin):
     name = models.CharField(max_length=256, null=False, blank=False)
     description = models.TextField("Description", blank=True, null=True)
-    date = models.DateTimeField(auto_now_add=True)
     image = models.ImageField(null=True, blank=True, upload_to="images/")
     cars_details = models.ManyToManyField(
         "cars_details.CarsDetails", related_name="cars_details", null=True, blank=True
@@ -14,3 +33,5 @@
         "provider.Provider", related_name="provider", null=True, blank=True
     )
     is_active = models.BooleanField(default=True)
+
+    objects = CarsManager()
Index: .env
===================================================================
diff --git a/.env b/.env
new file mode 100644
--- /dev/null	
+++ b/.env	
@@ -0,0 +1,1 @@
+SECRET_KEY=11)!2wadadawd21e1@@&w21@@E@c2dd2(e@##Ddw3213
\ No newline at end of file
Index: src/provider/api/router.py
===================================================================
diff --git a/src/provider/api/router.py b/src/provider/api/router.py
new file mode 100644
--- /dev/null	
+++ b/src/provider/api/router.py	
@@ -0,0 +1,7 @@
+from rest_framework import routers
+
+from src.provider.api.views.provider import ProviderView
+
+provider_api_router = routers.DefaultRouter()
+
+provider_api_router.register("provider", ProviderView)
